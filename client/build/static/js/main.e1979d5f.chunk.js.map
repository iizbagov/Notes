{"version":3,"sources":["components/common/Button.tsx","store/actions.ts","components/Context/index.tsx","components/common/Position.tsx","components/common/colors.tsx","components/common/Flex.tsx","components/Popup/index.tsx","components/types/enums.ts","store/notesReducer.ts","components/Loader/index.tsx","components/common/space.tsx","components/common/AppLink.tsx","components/Notes/index.tsx","useDarkModeHook.ts","components/ErrorPopup/index.tsx","components/SaveBunner/index.tsx","components/common/Input.tsx","components/common/Textarea.tsx","components/Note/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["BaseButton","styled","theme","buttonColor","mainBackground","StyledButton","className","children","Button","props","onClick","onDoubleClick","URL","handleNoteChanges","dispatch","notes","note","a","fetch","_id","method","headers","body","JSON","stringify","title","text","response","ok","json","responseData","map","type","payload","hasError","onRetry","onCancel","getNotes","removeNote","id","filter","createNote","newNote","themeToggler","AppContext","createContext","MyContext","Provider","value","centerAbsoluteCss","css","position","left","top","transform","Row","Column","StyledCreateButton","StyledDarkFone","colors","PopupContainer","PopupInput","PopupTextarea","Popup","Themes","context","useContext","useState","noteValues","setNoteValues","dispatchMiddleware","state","onChange","e","node","target","placeholder","trim","setOpen","HANDLE_NOTE_CHANGES","NOTE_CHANGE_ERROR","REMOVE_NOTE","GET_NOTES","CREATE_NOTE","CHANGE_THEME","initialState","error","dark","reducer","action","LoaderAnimation","keyframes","DualRing","Loader","BaseLink","Link","AppLink","rest","StyledAddButton","StyledNotes","StyledHeader","titleColor","StyledTitle","StyledSubtitle","NotesContainer","space","NotesLoader","NoteLink","noteBgColor","NoteTitle","NoteP","ThemeToggler","Notes","library","add","faSun","faMoon","open","themeState","setThemeState","changeTheme","useCallback","light","useDarkMode","toggleTheme","useEffect","icon","length","to","StyledErrorButton","ErrPopup","ErrContainer","ErrButtons","ErrorPopup","StyledBunner","SaveBunner","setTimeout","onClose","BaseInput","Input","BaseTextarea","Textarea","StyledRemoveButton","StyledBackButton","StyledNote","NoteHeader","linkColor","NoteWrapper","NoteContent","NoteInput","headersColor","NoteTextarea","Note","faTrash","faSave","faLongArrowAltLeft","history","useHistory","useParams","inputIsActive","setInputIsActive","textareaIsActive","setTextareaIsActive","isSaved","setIsSaved","changeTitle","changeText","createNoteData","find","push","lightTheme","darkTheme","App","useReducer","themeContext","setthemeContext","args","apply","asyncMiddleware","themeChanger","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1979d5f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport { ReactElement } from \"react\";\n\ntype Props = {\n  onClick: any;\n  onDoubleClick?: () => void;\n  className?: string;\n  children: ReactElement | string;\n};\n\nconst BaseButton = styled(\"button\")`\n  border-radius: 12px;\n  border: none;\n  background: ${({ theme }) => theme.buttonColor};\n  color: ${({ theme }) => theme.mainBackground};\n  cursor: pointer;\n`;\n\nconst StyledButton = ({ className, children }: Props) => {\n  return <BaseButton className={className}>{children}</BaseButton>;\n};\n\nfunction Button(props: Props) {\n  return (\n    <div onClick={props.onClick} onDoubleClick={props.onDoubleClick}>\n      <StyledButton onClick={props.onClick} className={props.className}>\n        {props.children}\n      </StyledButton>\n    </div>\n  );\n}\n\nexport default Button;\n","import { Themes } from \"../components/types/enums\";\nimport { NoteData, Action } from \"../components/types/notesInterface\";\n\nconst URL = process.env.PUBLIC_URL || \"http://localhost:5000\";\n\nexport async function handleNoteChanges(\n  dispatch: (action: Action) => void,\n  notes: Array<NoteData>,\n  note: NoteData\n) {\n  try {\n    const response = await fetch(`${URL}/api/v1/notes/${note._id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({\n        title: note.title,\n        text: note.text,\n      }),\n    });\n    if (response.ok) {\n      const responseData = await response.json();\n      notes = notes.map((note) => {\n        if (note._id === responseData._id) {\n          return { ...responseData };\n        } else {\n          return note;\n        }\n      });\n      dispatch({\n        type: \"HANDLE_NOTE_CHANGES\",\n        notes,\n        payload: {\n          hasError: false,\n          onRetry: () => {},\n          onCancel: () => {},\n        },\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: \"NOTE_CHANGE_ERROR\",\n      notes,\n      payload: {\n        hasError: true,\n        async onRetry() {\n          handleNoteChanges(dispatch, notes, note);\n        },\n        onCancel() {\n          dispatch({\n            type: \"NOTE_CHANGE_ERROR\",\n            notes,\n            payload: {\n              hasError: false,\n              onRetry: () => {},\n              onCancel: () => {},\n            },\n          });\n        },\n      },\n    });\n  }\n}\n\nexport async function getNotes(dispatch: (action: Action) => void) {\n  const response = await fetch(`${URL}/api/v1/`, {\n    method: \"GET\",\n  });\n  const responseData = await response.json();\n  dispatch({\n    type: \"GET_NOTES\",\n    notes: responseData,\n  });\n}\nexport async function removeNote(\n  dispatch: (action: Action) => void,\n  notes: Array<NoteData>,\n  id: string\n) {\n  await fetch(`${URL}/api/v1/notes/${id}`, {\n    method: \"DELETE\",\n  });\n  notes.filter((note) => note._id === id);\n  dispatch({\n    type: \"REMOVE_NOTE\",\n    notes,\n  });\n}\n\nexport async function createNote(\n  dispatch: (action: Action) => void,\n  notes: Array<NoteData>,\n  newNote: NoteData\n) {\n  const response = await fetch(`${URL}/api/v1/notes/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify({\n      title: newNote.title,\n      text: newNote.text,\n    }),\n  });\n  const responseData = await response.json();\n  notes = [\n    ...notes,\n    {\n      _id: responseData._id,\n      title: newNote.title,\n      text: newNote.text,\n    },\n  ];\n  dispatch({\n    type: \"CREATE_NOTE\",\n    notes,\n  });\n}\n\nexport function themeToggler(\n  dispatch: (action: Action) => void,\n  theme: Themes.light | Themes.dark\n) {\n  dispatch({\n    type: \"CHANGE_THEME\",\n    theme,\n  });\n}\n","import { createContext, ReactElement } from \"react\";\nimport { ContextState } from \"../types/notesInterface\";\n\ntype ContextProps = {\n  value: ContextState;\n  children: ReactElement;\n};\n\nexport const AppContext = createContext<ContextState>({} as ContextState);\n\nfunction MyContext(props: ContextProps) {\n  return (\n    <AppContext.Provider value={props.value}>\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n\nexport default MyContext;\n","import { css } from \"@emotion/react\";\n\nexport const centerAbsoluteCss = css({\n  position: 'absolute',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)'\n})\n\n","export default {\n  noteShadow: \"rgba(0, 0, 0, 0.1);\",\n  popupBg: \"rgba(0, 0, 0, 0.5);\",\n\n  noteBgLight: \"#fff\",\n  headersColorLight: \"#cdcdcd\",\n  activeLight: \"#ffc102\",\n  mainColorLight: \"#f8f8f8\",\n  linkColorLight: \"#828282\",\n  titleColorLight: \"#000\",\n\n  noteBgDark: \"#20232A\",\n  headersColorDark: \"#fff\",\n  activeDark: \"#61DAFB\",\n  mainColorDark: \"#282C34\",\n  linkColorDark: \"#fff\",\n  titleColorDark: \"#fff\",\n};\n","import styled from \"@emotion/styled\";\n\n\nexport const Row = styled('div')`\n    display: flex;\n`\n\nexport const Column = styled('div')`\n    display: flex;\n    flex-direction: column;\n`\n\n\n","import \"../../index.css\";\nimport Button from \"../common/Button\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { createNote } from \"../../store/actions\";\nimport { AppContext } from \"../Context\";\nimport styled from \"@emotion/styled\";\nimport { centerAbsoluteCss } from \"../common/Position\";\nimport colors from \"../common/colors\";\nimport { Column } from \"../common/Flex\";\n\ntype Props = {\n  setOpen: () => void;\n};\n\nconst StyledCreateButton = styled(Button)`\n  position: relative;\n  text-transform: uppercase;\n  font-weight: 700;\n  height: 50px;\n  width: 200px;\n  border-radius: 10px;\n  font-size: 18px;\n`;\n\nconst StyledDarkFone = styled(Button)`\n  z-index: 10;\n  content: \"\";\n  height: 100vh;\n  width: 100%;\n  background: ${colors.popupBg};\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  border-radius: 0;\n`;\n\nconst PopupContainer = styled(Column)`\n  ${centerAbsoluteCss}\n  z-index: 15;\n  background: ${({ theme }) => theme.mainBackground};\n  height: 500px;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n`;\nconst PopupInput = styled(\"input\")`\n  margin-bottom: 50px;\n  width: 250px;\n  height: 40px;\n  border-radius: 10px;\n  font-size: 22px;\n  border: 1px solid ${colors.headersColorLight};\n  padding: 0 15px;\n`;\n\nconst PopupTextarea = styled(\"textarea\")`\n  margin-bottom: 50px;\n  padding: 15px;\n  height: 150px;\n  width: 250px;\n  font-size: 22px;\n  border: 1px solid ${colors.headersColorLight};\n  border-radius: 10px;\n  resize: none;\n  letter-spacing: -0.09em;\n`;\n\nfunction Popup(props: Props) {\n  const context = useContext(AppContext);\n  const [noteValues, setNoteValues] = useState({\n    title: \"\",\n    text: \"\",\n  });\n  const dispatch = context.dispatchMiddleware;\n  const notes = context.state.notes;\n\n  function createNoteData() {\n    const title = noteValues.title;\n    const text = noteValues.text;\n    if (title.trim() !== \"\" && text.trim() !== \"\") {\n      dispatch(createNote, notes, noteValues);\n      props.setOpen();\n    }\n  }\n\n  return (\n    <div>\n      <PopupContainer>\n        <PopupInput\n          onChange={(e) =>\n            setNoteValues((node) => ({ ...node, title: e.target.value }))\n          }\n          placeholder=\"Title\"\n        ></PopupInput>\n        <PopupTextarea\n          onChange={(e) =>\n            setNoteValues((node) => ({ ...node, text: e.target.value }))\n          }\n          placeholder=\"Text\"\n        ></PopupTextarea>\n        <StyledCreateButton onClick={createNoteData}>\n          Create Note\n        </StyledCreateButton>\n      </PopupContainer>\n      <StyledDarkFone\n        onClick={() => {\n          props.setOpen();\n        }}\n      >\n        {\" \"}\n      </StyledDarkFone>\n    </div>\n  );\n}\n\nexport default Popup;\n","export enum Themes {\n  light = \"light\",\n  dark = \"dark\",\n}\n","import { Themes } from \"../components/types/enums\";\nimport { InitialState, Action } from \"../components/types/notesInterface\";\n\nconst HANDLE_NOTE_CHANGES = \"HANDLE_NOTE_CHANGES\";\nconst NOTE_CHANGE_ERROR = \"NOTE_CHANGE_ERROR\";\nconst REMOVE_NOTE = \"REMOVE_NOTE\";\nconst GET_NOTES = \"GET_NOTES\";\nconst CREATE_NOTE = \"CREATE_NOTE\";\nconst CHANGE_THEME = \"CHANGE_THEME\";\n\nexport const initialState: InitialState = {\n  notes: [],\n  error: {\n    hasError: false,\n    onRetry: () => {},\n    onCancel: () => {},\n  },\n  theme: Themes.dark,\n};\n\nexport function reducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case HANDLE_NOTE_CHANGES:\n      if (\"notes\" in action && \"payload\" in action) {\n        return {\n          ...state,\n          notes: action.notes,\n          error: { ...action.payload },\n        };\n        /* falls through */\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case NOTE_CHANGE_ERROR:\n      if (\"payload\" in action) {\n        return {\n          ...state,\n          error: {\n            ...action.payload,\n          },\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case REMOVE_NOTE:\n      if (\"notes\" in action) {\n        return {\n          ...state,\n          notes: action.notes,\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case GET_NOTES:\n      if (\"notes\" in action) {\n        return {\n          ...state,\n          notes: action.notes,\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case CREATE_NOTE:\n      if (\"notes\" in action) {\n        return {\n          ...state,\n          notes: action.notes,\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case CHANGE_THEME:\n      if (\"theme\" in action) {\n        return {\n          ...state,\n          theme: action.theme,\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    default:\n      return state;\n  }\n}\n","import { keyframes } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\n\nconst LoaderAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n`\n\nconst DualRing = styled(\"div\")`\n  display: inline-block;\n  width: 80px;\n  height: 80px;\n  &:after {\n    content: \" \";\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid #ffc102;\n    border-color: #ffc102 transparent #ffc102 transparent;\n    animation: ${LoaderAnimation} 1.2s linear infinite;\n  }\n`;\n\nfunction Loader() {\n  return <DualRing></DualRing>;\n}\n\nexport default Loader;\n","export default {\n  defaultTopMargin: \"margin-top: 30px;\",\n  textBottomMargin: \"margin-bottom: 10px;\",\n};\n","import styled from \"@emotion/styled\";\nimport { Link, LinkProps } from \"react-router-dom\";\nimport colors from \"../common/colors\";\n\nconst BaseLink = styled(Link)`\n  text-decoration: none;\n  color: ${colors.linkColorLight};\n`;\n\nexport function AppLink(props: LinkProps) {\n  const { children, ...rest } = props;\n\n  return <BaseLink {...rest}>{children}</BaseLink>;\n}\n","import \"../../index.css\";\nimport Button from \"../common/Button\";\nimport Popup from \"../Popup\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { getNotes } from \"../../store\";\nimport Loader from \"../Loader\";\nimport { NoteData } from \"../types/notesInterface\";\nimport { AppContext } from \"../Context\";\nimport styled from \"@emotion/styled\";\nimport { Column, Row } from \"../common/Flex\";\nimport colors from \"../common/colors\";\nimport space from \"../common/space\";\nimport { AppLink } from \"../common/AppLink\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Themes } from \"../types/enums\";\nimport { useDarkMode } from \"../../useDarkModeHook\";\n\nconst StyledAddButton = styled(Button)`\n  position: absolute;\n  bottom: 50px;\n  right: 50px;\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  font-size: 36px;\n  cursor: pointer;\n`;\n\nconst StyledNotes = styled(Column)`\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background: ${({ theme }) => theme.mainBackground};\n`;\n\nconst StyledHeader = styled(\"div\")`\n  text-align: center;\n  margin-top: 25px;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst StyledTitle = styled(\"h2\")`\n  margin-bottom: 25px;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst StyledSubtitle = styled(\"h4\")`\n  color: ${({ theme }) => theme.titleColor};\n  };\n`;\nconst NotesContainer = styled(\"div\")`\n  ${space.defaultTopMargin}\n  height: 100%;\n  width: 600px;\n`;\nconst NotesLoader = styled(Row)`\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NoteLink = styled(\"div\")`\n  width: 100%;\n  background: ${({ theme }) => theme.noteBgColor};\n  padding: 15px;\n  border-radius: 10px;\n  ${space.textBottomMargin}\n  &:hover {\n    box-shadow: 5px 5px 5px ${colors.noteShadow};\n  }\n`;\nconst NoteTitle = styled(\"h2\")`\n  color: ${({ theme }) => theme.titleColor};\n  ${space.textBottomMargin}\n`;\n\nconst NoteP = styled(\"p\")`\n  width: 400px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => theme.titleColor};\n`;\n\nconst ThemeToggler = styled(Button)`\n  position: absolute;\n  cursor: pointer;\n  left: 50px;\n  bottom: 50px;\n  height: 50px;\n  width: 50px;\n  font-size: 24px;\n`;\n\nfunction Notes() {\n  library.add(faSun, faMoon);\n\n  const context = useContext(AppContext);\n  const dispatch = context.dispatchMiddleware;\n  const notes = context.state.notes;\n  const [open, setOpen] = useState<boolean>(false);\n  const [themeState, toggleTheme] = useDarkMode();\n\n  useEffect(() => dispatch(getNotes), [getNotes]);\n\n  return (\n    <StyledNotes>\n      {open ? (\n        <Popup\n          setOpen={() => {\n            setOpen(!open);\n          }}\n        />\n      ) : null}\n\n      <ThemeToggler onClick={toggleTheme}>\n        {themeState === Themes.light ? (\n          <FontAwesomeIcon icon={faSun} />\n        ) : (\n          <FontAwesomeIcon icon={faMoon} />\n        )}\n      </ThemeToggler>\n      <StyledHeader>\n        <StyledTitle>Notes</StyledTitle>\n        <StyledSubtitle>Enter your note or create a new note</StyledSubtitle>\n      </StyledHeader>\n      <StyledAddButton\n        onClick={() => {\n          setOpen(!open);\n        }}\n      >\n        +\n      </StyledAddButton>\n      <NotesContainer>\n        {notes.length > 0 ? (\n          notes.map((note: NoteData) => {\n            return (\n              <div key={note._id}>\n                <AppLink to={`/notes/${note._id}`}>\n                  <NoteLink>\n                    <NoteTitle>{note.title}</NoteTitle>\n                    <NoteP>{note.text}</NoteP>\n                  </NoteLink>\n                </AppLink>\n              </div>\n            );\n          })\n        ) : (\n          <NotesLoader>\n            <Loader />\n          </NotesLoader>\n        )}\n      </NotesContainer>\n    </StyledNotes>\n  );\n}\n\nexport default Notes;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"./components/Context\";\nimport { Themes } from \"./components/types/enums\";\nimport { themeToggler } from \"./store\";\n\nexport const useDarkMode = () => {\n  const context = useContext(AppContext);\n  const theme = context.state.theme;\n  const dispatch = context.dispatchMiddleware;\n  const [themeState, setThemeState] =\n    useState<Themes.light | Themes.dark>(theme);\n\n  const changeTheme = useCallback(\n    (theme: Themes.light | Themes.dark) => {\n      setThemeState(theme);\n    },\n    [setThemeState]\n  );\n\n  const toggleTheme = () => {\n    if (themeState === Themes.light) {\n      changeTheme(Themes.dark);\n      dispatch(themeToggler, Themes.dark);\n    } else {\n      changeTheme(Themes.light);\n      dispatch(themeToggler, Themes.light);\n    }\n  };\n\n  return [themeState, toggleTheme];\n};\n","import { useContext } from \"react\";\nimport { AppContext } from \"../Context\";\nimport Button from \"../common/Button\";\nimport styled from \"@emotion/styled\";\nimport { centerAbsoluteCss } from \"../common/Position\";\nimport { Column, Row } from \"../common/Flex\";\nimport colors from \"../common/colors\";\nimport space from \"../common/space\";\n\nconst StyledErrorButton = styled(Button)`\n  font-size: 22px;\n  ${space.defaultTopMargin}\n  width: 150px;\n  height: 50px;\n  margin-right: 20px;\n`;\nconst ErrPopup = styled(\"div\")`\n  z-index: 100;\n  content: \"\";\n  height: 100vh;\n  width: 100%;\n  background: ${colors.popupBg};\n  border-radius: 0;\n`;\n\nconst ErrContainer = styled(Column)`\n  ${centerAbsoluteCss}\n  z-index: 15;\n  background: ${({ theme }) => theme.mainBackground};\n  height: 500px;\n  width: 400px;\n  font-size: 25px;\n  font-weight: 700;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n`;\nconst ErrButtons = styled(Row)``;\n\nfunction ErrorPopup() {\n  const context = useContext(AppContext);\n  const error = context.state.error;\n\n  return (\n    <ErrPopup>\n      <ErrContainer>\n        <div>Your data don't be saved!!!</div>\n        <ErrButtons>\n          <StyledErrorButton onClick={error.onRetry}>\n            Try again\n          </StyledErrorButton>\n          <StyledErrorButton onClick={error.onCancel}>Cansel</StyledErrorButton>\n        </ErrButtons>\n      </ErrContainer>\n    </ErrPopup>\n  );\n}\n\nexport default ErrorPopup;\n","import styled from \"@emotion/styled\";\nimport { useEffect } from \"react\";\n\ntype Props = {\n  onClose: () => void;\n};\n\nconst StyledBunner = styled(\"div\")`\n  position: absolute;\n  bottom: 50px;\n  right: 50%;\n  padding: 15px;\n  background: ${({ theme }) => theme.buttonColor};\n  color: ${({ theme }) => theme.mainBackground};\n  transform: translate(50%, 0);\n  border-radius: 10px;\n`;\n\nfunction SaveBunner(props: Props) {\n  useEffect(() => {\n    setTimeout(props.onClose, 2000);\n  }, []);\n  return <StyledBunner>Your data was successfully saved</StyledBunner>;\n}\n\nexport default SaveBunner;\n","import styled from \"@emotion/styled\";\n\ntype Props = {\n    className?: string;\n    placeholder?: string;\n    value?: string;\n    onChange: (e: any) => void\n}\n\nconst BaseInput = styled('input')`\n\n`\n\nfunction Input (props: Props) {\n    return (\n        <BaseInput className={props.className} onChange={props.onChange} value={props.value} placeholder={props.value} />\n    )\n}\n\nexport default Input;","import styled from \"@emotion/styled\";\n\ntype Props = {\n    className?: string;\n    placeholder?: string;\n    value?: string;\n    onChange: (e: any) => void\n}\n\nconst BaseTextarea = styled('textarea')`\n  letter-spacing: -0.09em;\n`\nfunction Textarea (props: Props) {\n    return (\n        <BaseTextarea className={props.className} onChange={props.onChange} value={props.value} placeholder={props.value} />\n    )\n}\n\nexport default Textarea;","import { useHistory, useParams } from \"react-router\";\nimport \"../../index.css\";\nimport Button from \"../common/Button\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faTrash,\n  faSave,\n  faLongArrowAltLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext, useState, useEffect } from \"react\";\nimport Loader from \"../Loader\";\nimport { getNotes, handleNoteChanges } from \"../../store/actions\";\nimport { removeNote } from \"../../store/actions\";\nimport ErrorPopup from \"../ErrorPopup\";\nimport SaveBunner from \"../SaveBunner\";\nimport { NoteData, Params } from \"../types/notesInterface\";\nimport { AppContext } from \"../Context\";\nimport styled from \"@emotion/styled\";\nimport { Column } from \"../common/Flex\";\nimport Input from \"../common/Input\";\nimport Textarea from \"../common/Textarea\";\n\nconst StyledRemoveButton = styled(Button)`\n  position: absolute;\n  top: 30px;\n  right: 50px;\n  height: 50px;\n  width: 50px;\n`;\nconst StyledBackButton = styled(Button)`\n  position: absolute;\n  top: 30px;\n  left: 50px;\n  height: 50px;\n  width: 50px;\n`;\nconst StyledNote = styled(Column)`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  align-items: center;\n  background: ${({ theme }) => theme.mainBackground};\n`;\nconst NoteHeader = styled(\"div\")`\n  text-align: center;\n  margin: 30px 0;\n  color: ${({ theme }) => theme.linkColor};\n`;\nconst NoteWrapper = styled(\"div\")`\n  max-width: 1170px;\n  min-width: 600px;\n  margin: 0 auto;\n`;\nconst NoteContent = styled(\"div\")`\n  width: 100%;\n  text-align: center;\n  color: ${({ theme }) => theme.linkColor};\n`;\nconst NoteInput = styled(Input)`\n  margin-top: -10px;\n  width: 600px;\n  height: 50px;\n  border-radius: 10px;\n  font-size: 22px;\n  border: 1px solid ${({ theme }) => theme.headersColor};\n  padding: 0 15px;\n`;\nconst NoteTextarea = styled(Textarea)`\n  margin-bottom: 50px;\n  padding: 15px;\n  height: 400px;\n  width: 600px;\n  font-size: 22px;\n  border: 1px solid ${({ theme }) => theme.headersColor};\n  border-radius: 10px;\n  resize: none;\n`;\n\nfunction Note() {\n  library.add(faTrash, faSave, faLongArrowAltLeft);\n\n  const context = useContext(AppContext);\n  const dispatch = context.dispatchMiddleware;\n  const notes = context.state.notes;\n  const hasError = context.state.error.hasError;\n  const history = useHistory();\n  const params: Params = useParams();\n  const id: string = params.id;\n  const [noteValues, setNoteValues] = useState<NoteData>({\n    title: \"\",\n    text: \"\",\n    _id: \"\",\n  });\n  const [inputIsActive, setInputIsActive] = useState(false);\n  const [textareaIsActive, setTextareaIsActive] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n\n  useEffect(() => {\n    if (notes.length > 0) {\n      const note = notes.find((note: NoteData) => {\n        return note._id === id;\n      });\n      setNoteValues({\n        title: note!.title,\n        text: note!.text,\n        _id: note!._id,\n      });\n    }\n  }, [notes]);\n\n  useEffect(() => {\n    dispatch(getNotes);\n  }, [getNotes]);\n\n  useEffect(() => {}, [hasError]);\n\n  function putSomeData() {\n    dispatch(handleNoteChanges, notes, noteValues);\n    setIsSaved(true);\n  }\n\n  function changeTitle(value: boolean) {\n    setInputIsActive(value);\n    textareaIsActive && setTextareaIsActive(!textareaIsActive);\n  }\n\n  function changeText(value: boolean) {\n    inputIsActive && setInputIsActive(!inputIsActive);\n    setTextareaIsActive(value);\n  }\n\n  function createNoteData() {\n    inputIsActive && changeTitle(false);\n    textareaIsActive && changeText(false);\n    putSomeData();\n  }\n\n  function resetNote(index: string) {\n    dispatch(removeNote, notes, index);\n    history.push(\"/\");\n  }\n\n  function goToNotes() {\n    if (isSaved === false) {\n      history.push(\"/\");\n      inputIsActive && changeTitle(false);\n      textareaIsActive && changeText(false);\n    }\n  }\n\n  function onClose() {\n    setIsSaved(false);\n  }\n\n  return (\n    <div>\n      {notes.length > 0 ? (\n        <StyledNote>\n          {hasError ? <ErrorPopup /> : null}\n          {isSaved ? <SaveBunner onClose={onClose} /> : null}\n          <NoteHeader>\n            <div>\n              <StyledBackButton onClick={goToNotes}>\n                <FontAwesomeIcon icon={faLongArrowAltLeft} />\n              </StyledBackButton>\n            </div>\n            <div onClick={() => changeTitle(true)}>\n              {inputIsActive ? (\n                <NoteInput\n                  value={noteValues.title}\n                  onChange={(e) => {\n                    setNoteValues((node) => {\n                      return {\n                        ...node,\n                        title: e.target.value,\n                      };\n                    });\n                  }}\n                ></NoteInput>\n              ) : (\n                <h1>{noteValues.title}</h1>\n              )}\n            </div>\n            <StyledRemoveButton\n              onClick={() => {\n                !inputIsActive && !textareaIsActive\n                  ? resetNote(id)\n                  : createNoteData();\n              }}\n            >\n              <FontAwesomeIcon\n                icon={!inputIsActive && !textareaIsActive ? faTrash : faSave}\n              />\n            </StyledRemoveButton>\n          </NoteHeader>\n          <NoteWrapper>\n            <NoteContent onClick={() => changeText(true)}>\n              {textareaIsActive ? (\n                <NoteTextarea\n                  value={noteValues.text}\n                  onChange={(e) => {\n                    setNoteValues((node) => {\n                      return {\n                        ...node,\n                        text: e.target.value,\n                      };\n                    });\n                  }}\n                ></NoteTextarea>\n              ) : (\n                <div>{noteValues.text}</div>\n              )}\n            </NoteContent>\n          </NoteWrapper>\n        </StyledNote>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n}\n\nexport default Note;\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport { useCallback, useReducer, useState } from \"react\";\nimport Notes from \"./components/Notes\";\nimport Note from \"./components/Note\";\nimport { reducer, initialState } from \"./store\";\nimport { Action } from \"./components/types/notesInterface\";\nimport MyContext from \"./components/Context\";\nimport colors from \"./components/common/colors\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { Themes } from \"./components/types/enums\";\n\nconst lightTheme = {\n  mainBackground: colors.mainColorLight,\n  titleColor: colors.titleColorLight,\n  headersColor: colors.headersColorLight,\n  buttonColor: colors.activeLight,\n  linkColor: colors.linkColorLight,\n  noteBgColor: colors.noteBgLight,\n};\n\nconst darkTheme = {\n  mainBackground: colors.mainColorDark,\n  titleColor: colors.titleColorDark,\n  headersColor: colors.headersColorDark,\n  buttonColor: colors.activeDark,\n  linkColor: colors.linkColorDark,\n  noteBgColor: colors.noteBgDark,\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [themeContext, setthemeContext] = useState<Themes.light | Themes.dark>(\n    Themes.light\n  );\n\n  const changeTheme = useCallback(\n    (theme: Themes.light | Themes.dark) => {\n      setthemeContext(theme);\n    },\n    [setthemeContext]\n  );\n\n  function asyncMiddleware(dispatch: (action: Action) => void) {\n    return (\n      action: (dispatch: (action: Action) => void, ...args: any[]) => void,\n      ...args: any[]\n    ) => {\n      return action.apply(null, [dispatch, ...args]);\n    };\n  }\n\n  return (\n    <MyContext\n      value={{\n        state,\n        dispatchMiddleware: asyncMiddleware(dispatch),\n        themeState: themeContext,\n        themeChanger: changeTheme,\n      }}\n    >\n      <div className=\"App\">\n        <ThemeProvider\n          theme={state.theme === Themes.light ? lightTheme : darkTheme}\n        >\n          <BrowserRouter>\n            <Route exact path=\"/\" render={() => <Notes />} />\n            <Route\n              path=\"/notes/:id\"\n              render={(props) => {\n                return <Note />;\n              }}\n            />\n          </BrowserRouter>\n        </ThemeProvider>\n      </div>\n    </MyContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}