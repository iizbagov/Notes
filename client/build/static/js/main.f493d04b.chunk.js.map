{"version":3,"sources":["components/Header/index.jsx","components/Button/index.jsx","components/MyContext/index.js","store/actions.js","components/Popup/index.jsx","store/notesReducer.js","components/Notes/index.jsx","components/Loader/index.jsx","components/Disclaimer/index.jsx","components/Note/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","Button","onClick","undefined","onDoubleClick","text","Context","React","createContext","MyContext","Provider","value","children","setOpen","newValue","dispatch","type","open","getNotes","dipatch","a","console","log","fetch","process","method","response","json","responseData","notes","Popup","context","useContext","useState","title","noteValues","setNoteValues","state","to","onChange","e","node","target","placeholder","trim","newNote","headers","body","JSON","stringify","_id","createNote","initialState","reducer","action","Notes","useEffect","length","map","note","Loader","Disclaimer","Note","library","add","faTrash","faSave","faLongArrowAltLeft","history","useHistory","id","useParams","inputIsActive","setInputIsActive","textareaIsActive","setTextareaIsActive","isSaved","setIsSaved","showAlert","setShowAlert","putSomeData","ok","handleNoteChanges","changeTitle","changeText","resetNote","index","filter","removeNote","push","find","icon","createNoteData","App","useReducer","exact","path","render","onLeave","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f493d04b.chunk.js","sourcesContent":["import \"../../index.css\";\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <h2 className=\"header-title\">Notes</h2>\n      <h4 className=\"header-subtitle\">Enter your note or create a new note</h4>\n    </div>\n  );\n}\n\nexport default Header;\n","import \"../../index.css\";\n\nfunction Button(props) {\n  return (\n    <div\n      className=\"button\"\n      onClick={props.onClick !== undefined ? props.onClick : null}\n      onDoubleClick={\n        props.onDoubleClick !== undefined ? props.onDoubleClick : null\n      }\n    >\n      <button>{props.text}</button>\n    </div>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\n\nexport const Context = React.createContext();\n\nfunction MyContext(props) {\n  return (\n    <Context.Provider value={props.value}>{props.children}</Context.Provider>\n  );\n}\n\nexport default MyContext;\n","const URL = process.env.PUBLIC_URL;\n\nexport function handleNoteChanges(notes, note) {\n  return async function (dispatch) {\n    const response = await fetch(`${URL}api/v1/notes/${note.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({\n        title: note.title,\n        text: note.text,\n      }),\n    });\n    if (response.ok) {\n      const responseData = await response.json();\n      notes = notes.map((note) => {\n        if (note._id === responseData._id) {\n          return { ...responseData };\n        } else {\n          return note;\n        }\n      });\n      console.log(notes);\n    }\n    dispatch({\n      type: \"handleNoteChanges\",\n      notes,\n    });\n  };\n}\n\nexport function setOpen(newValue) {\n  return function (dispatch) {\n    dispatch({\n      type: \"setOpen\",\n      open: newValue,\n    });\n  };\n}\n\nexport function getNotes() {\n  return async function (dipatch) {\n    console.log(\"make call\");\n    const response = await fetch(`${URL}api/v1/`, {\n      method: \"GET\",\n    });\n    const responseData = await response.json();\n    dipatch({\n      type: \"getNotes\",\n      notes: responseData,\n    });\n  };\n}\nexport function removeNote(notes, id) {\n  return async function (dispatch) {\n    const deleteMethod = await fetch(`${URL}api/v1/notes/${id}`, {\n      method: \"DELETE\",\n    });\n    if (deleteMethod.ok) {\n      notes.filter((note) => note._id !== id);\n    }\n    dispatch({\n      type: \"removeNote\",\n      notes,\n    });\n  };\n}\n\nexport function createNote(notes, newNote) {\n  return async function (dispatch) {\n    const response = await fetch(`${URL}api/v1/notes/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({\n        title: newNote.title,\n        text: newNote.text,\n      }),\n    });\n    const responseData = await response.json();\n    notes = [\n      ...notes,\n      {\n        _id: responseData._id,\n        title: newNote.title,\n        text: newNote.text,\n      },\n    ];\n    console.log(notes);\n    dispatch({\n      type: \"createNote\",\n      notes,\n    });\n  };\n}\n","import \"../../index.css\";\nimport Button from \"../Button\";\nimport { useState } from \"react\";\nimport { Context } from \"../MyContext\";\nimport { useContext } from \"react\";\nimport { setOpen, createNote } from \"../../store/actions\";\n\nfunction Popup(props) {\n  const context = useContext(Context);\n  const [noteValues, setNoteValues] = useState({\n    title: \"\",\n    text: \"\",\n  });\n  const dispatch = context.dispatch;\n  const open = context.state.open;\n  const notes = context.state.notes;\n\n  function createNoteData() {\n    const title = noteValues.title;\n    const text = noteValues.text;\n    if (title.trim() !== \"\" && text.trim() !== \"\") {\n      createNote(notes, noteValues)(dispatch);\n      setOpen(!open)(dispatch);\n    }\n  }\n\n  return (\n    <div className=\"popup\" to=\"/popup\">\n      <div className=\"popup__container\">\n        <input\n          onChange={(e) =>\n            setNoteValues((node) => ({ ...node, title: e.target.value }))\n          }\n          placeholder=\"Title\"\n        ></input>\n        <textarea\n          onChange={(e) =>\n            setNoteValues((node) => ({ ...node, text: e.target.value }))\n          }\n          placeholder=\"Text\"\n        ></textarea>\n        <Button onClick={createNoteData} text=\"Create note\" />\n      </div>\n      <Button\n        onClick={() => {\n          setOpen(!open)(dispatch);\n        }}\n        text=\"\"\n      />\n    </div>\n  );\n}\n\nexport default Popup;\n","export const initialState = {\n  notes: [],\n  open: false,\n};\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"setOpen\":\n      return {\n        ...state,\n        open: action.open,\n      };\n    case \"handleNoteChanges\":\n      return {\n        ...state,\n        notes: [...action.notes],\n      };\n    case \"removeNote\":\n      return {\n        ...state,\n        notes: [...action.notes],\n      };\n    case \"getNotes\":\n      return {\n        ...state,\n        notes: [...action.notes],\n      };\n    case \"createNote\":\n      return {\n        ...state,\n        notes: [...action.notes],\n      };\n    default:\n      return state;\n  }\n}\n","import \"../../index.css\";\nimport Header from \"../Header\";\nimport Button from \"../Button\";\nimport Popup from \"../Popup\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../MyContext\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { getNotes } from \"../../store\";\nimport { setOpen } from \"../../store/actions\";\n\nfunction Notes(props) {\n  const context = useContext(Context);\n  const dispatch = context.dispatch;\n  const notes = context.state.notes;\n  const open = context.state.open;\n\n  useEffect(() => getNotes()(dispatch), [dispatch]);\n\n  return (\n    <div className=\"notes\">\n      {open ? <Popup /> : null}\n      <Header />\n      <Button\n        onClick={() => {\n          setOpen(!open)(dispatch);\n        }}\n        text=\"+\"\n      />\n      <div className=\"notes__container\">\n        {notes.length > 0 ? (\n          notes.map((note) => {\n            return (\n              <div key={note._id} className=\"note-link_container\">\n                <Link to={`/notes/${note._id}`}>\n                  <div className=\"note-link\">\n                    <h2>{note.title}</h2>\n                    <p>{note.text}</p>\n                  </div>\n                </Link>\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"notes__container-desc\">\n            <div className=\"notes__container-desc-text\">\n              Sorry but now you haven`t any note, if you want create it push on\n              create button\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Notes;\n","import React from \"react\";\n\nfunction Loader(props) {\n  return <div className=\"lds-dual-ring\"></div>;\n}\n\nexport default Loader;\n","import React from \"react\";\nimport Button from \"../Button\";\n\nfunction Disclaimer() {\n  return <div className=\"disclaimer\">Вы забыли сохранить изменения</div>;\n}\n\nexport default Disclaimer;\n","import { useHistory, useParams } from \"react-router\";\nimport \"../../index.css\";\nimport Button from \"../Button\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faTrash,\n  faSave,\n  faLongArrowAltLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Context } from \"../MyContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport Loader from \"../Loader\";\nimport Disclaimer from \"../Disclaimer\";\nimport { getNotes, handleNoteChanges } from \"../../store/actions\";\nimport { removeNote } from \"../../store/actions\";\n\nfunction Note(props) {\n  library.add(faTrash, faSave, faLongArrowAltLeft);\n  const context = useContext(Context);\n  const dispatch = context.dispatch;\n  const notes = context.state.notes;\n  const history = useHistory();\n  const params = useParams();\n  const id = params.id;\n  const [noteValues, setNoteValues] = useState({});\n  const [inputIsActive, setInputIsActive] = useState(false);\n  const [textareaIsActive, setTextareaIsActive] = useState(false);\n  const [isSaved, setIsSaved] = useState(true);\n  const [showAlert, setShowAlert] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  console.log(notes);\n  useEffect(() => {\n    console.log(\"changed\", notes);\n    if (notes.length > 0) {\n      const note = notes.find((note) => {\n        return note._id === id;\n      });\n      setNoteValues({\n        title: note.title,\n        text: note.text,\n        id: note._id,\n      });\n    }\n  }, [notes]);\n\n  useEffect(() => getNotes()(dispatch), [dispatch]);\n\n  function putSomeData() {\n    handleNoteChanges(notes, noteValues)(dispatch);\n  }\n\n  function changeTitle(value) {\n    setInputIsActive(value);\n    textareaIsActive && setTextareaIsActive(!textareaIsActive);\n  }\n\n  function changeText(value) {\n    inputIsActive && setInputIsActive(!inputIsActive);\n    setTextareaIsActive(value);\n  }\n\n  function createNoteData() {\n    const title = noteValues.title;\n    const text = noteValues.text;\n    if (title.trim() !== \"\" && text.trim() !== \"\") {\n      setOpen(!open);\n    }\n    inputIsActive && changeTitle();\n    textareaIsActive && changeText();\n    putSomeData();\n    setIsSaved(true);\n    setShowAlert(false);\n  }\n\n  function resetNote(index) {\n    removeNote(notes, index)(dispatch);\n    history.push(\"/\");\n  }\n\n  function goToNotes() {\n    setShowAlert(true);\n    if (isSaved !== false) {\n      history.push(\"/\");\n      inputIsActive && changeTitle(false);\n      textareaIsActive && changeText(false);\n      setShowAlert(false);\n    }\n  }\n\n  function saveChanges() {\n    putSomeData();\n    setIsSaved(true);\n  }\n\n  function toggleTitle() {\n    changeTitle(true);\n    setShowAlert(false);\n  }\n\n  function toggleText() {\n    changeText(true);\n    setShowAlert(false);\n  }\n\n  return (\n    <div className=\"note\">\n      <div className=\"note__header\">\n        <div className=\"note__header-back_button\">\n          {showAlert && <Disclaimer />}\n          <Button\n            onClick={goToNotes}\n            text={<FontAwesomeIcon icon={faLongArrowAltLeft} />}\n          />\n        </div>\n        <div className=\"note__header-title\" onClick={toggleTitle}>\n          {inputIsActive ? (\n            <input\n              value={noteValues.title}\n              onChange={(e) => {\n                setNoteValues((node) => {\n                  return {\n                    ...node,\n                    title: e.target.value,\n                  };\n                });\n                setIsSaved(false);\n              }}\n            ></input>\n          ) : notes.length > 0 ? (\n            <h1>{noteValues.title}</h1>\n          ) : (\n            <Loader />\n          )}\n        </div>\n        <Button\n          onClick={() => {\n            !inputIsActive && !textareaIsActive\n              ? resetNote(id)\n              : createNoteData();\n          }}\n          text={\n            <FontAwesomeIcon\n              icon={!inputIsActive && !textareaIsActive ? faTrash : faSave}\n            />\n          }\n        />\n      </div>\n      <div className=\"note__wrapper\">\n        <div className=\"note__content\" onClick={toggleText}>\n          {textareaIsActive ? (\n            <textarea\n              value={noteValues.text}\n              onChange={(e) => {\n                setNoteValues((node) => {\n                  return {\n                    ...node,\n                    text: e.target.value,\n                  };\n                });\n                setIsSaved(false);\n              }}\n            ></textarea>\n          ) : notes.length > 0 ? (\n            <div>{noteValues.text}</div>\n          ) : (\n            <Loader />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Note;\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport Notes from \"./components/Notes\";\nimport Note from \"./components/Note\";\nimport MyContext from \"./components/MyContext\";\nimport { reducer, initialState } from \"./store\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <MyContext\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      <div className=\"App\">\n        <BrowserRouter>\n          <Route exact path=\"/\" render={() => <Notes />} />\n          <Route\n            path=\"/notes/:id\"\n            render={(props) => {\n              return <Note />;\n            }}\n            onLeave={() => alert(\"stoj\")}\n          />\n        </BrowserRouter>\n      </div>\n    </MyContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}